name: Update Confluence Page with Commits

on:
  workflow_dispatch:  # Allow manual trigger

  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - '**'

jobs:
  update-confluence:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      CONFLUENCE_URL: https://airnewn.atlassian.net/wiki
      PAGE_ID: 2228225
      SPACE_KEY: "~7120201888c3feda8740dea868d9a13920847a"
      PAGE_TITLE: "Changelog Updates S"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Generate commit table rows
        id: commits
        run: |
          echo "Generating HTML commit table rows..."
          REPO_NAME="${{ github.repository }}"
          git log -n 5 --pretty=format:"<tr><td>$REPO_NAME</td><td>%h</td><td>%s</td><td>%ad</td></tr>" --date=iso > table_rows.html

      - name: Get current page content and version
        id: page
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content/$PAGE_ID?expand=body.storage,version")

          VERSION=$(echo "$RESPONSE" | jq '.version.number')
          CONTENT=$(echo "$RESPONSE" | jq -r '.body.storage.value')

          echo "version=$((VERSION + 1))" >> $GITHUB_OUTPUT
          echo "CONTENT<<EOF" >> $GITHUB_ENV
          echo "$CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Append new commit rows or create new table
        run: |
          NEW_ROWS=$(cat table_rows.html)
          CONTENT="${{ env.CONTENT }}"

          if echo "$CONTENT" | grep -q "</table>"; then
            echo "Existing table found. Appending rows..."
            UPDATED_CONTENT=$(echo "$CONTENT" | sed "s|</table>|$NEW_ROWS</table>|")
          else
            echo "No table found. Creating new table..."
            UPDATED_CONTENT="<table><tr><th>Module Name</th><th>Commit ID</th><th>Commit Message</th><th>Commit Date & Time</th></tr>$NEW_ROWS</table>"
          fi

          JSON=$(jq -n \
            --arg id "$PAGE_ID" \
            --arg title "$PAGE_TITLE" \
            --arg space_key "$SPACE_KEY" \
            --arg version "${{ steps.page.outputs.version }}" \
            --arg value "$UPDATED_CONTENT" \
            '{
              id: $id,
              type: "page",
              title: $title,
              space: { key: $space_key },
              version: { number: ($version | tonumber) },
              body: {
                storage: {
                  value: $value,
                  representation: "storage"
                }
              }
            }')

          echo "$JSON" > payload.json

          curl -s -X PUT "$CONFLUENCE_URL/rest/api/content/$PAGE_ID" \
            -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json