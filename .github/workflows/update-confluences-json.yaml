name: Update Confluence Page from JSON File

on:
  workflow_dispatch:

jobs:
  update-confluence:
    runs-on: ubuntu-latest
    env:
      CONFLUENCE_URL: https://airnewn.atlassian.net/wiki
      PAGE_ID: "13369346"
      PAGE_TITLE: "Json"
      SPACE_KEY: "~7120201888c3feda8740dea868d9a13920847a"
      
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Debug file presence
        run: |
          echo "Listing all files"
          find . -type f
          echo "Contents of pages directory:"
          ls -l pages

      - name: Read JSON file content
        id: read_json
        run: |
          CONTENT=$(jq -Rs '.' pages/Test.json)
          echo "PAGE_CONTENT=$CONTENT" >> $GITHUB_ENV

      - name: Convert JSON to HTML table
        id: json_to_html
        run: |
          JSON_PATH="pages/Test.json"

          HEADERS=$(jq -r '.users[0] | keys_unsorted | @tsv' "$JSON_PATH")

          TABLE="<table><tr>"
          for header in $HEADERS; do
            TABLE+="<th>$header</th>"
          done
          TABLE+="</tr>"

          jq -r '.users[] | [.id, .name, .email, .age, .isActive, (.roles | join(", "))] | @tsv' "$JSON_PATH" | \
          while IFS=$'\t' read -r id name email age active roles; do
            TABLE+="<tr><td>$id</td><td>$name</td><td>$email</td><td>$age</td><td>$active</td><td>$roles</td></tr>"
          done

          TABLE+="</table>"

          # Save to a file instead of env
          echo "$TABLE" > table.html

        id: json_to_html
        run: |
          JSON_PATH="pages/Test.json"

          HEADERS=$(jq -r '.users[0] | keys_unsorted | @tsv' "$JSON_PATH")

          TABLE="<table><tr>"
          for header in $HEADERS; do
            TABLE+="<th>$header</th>"
          done
          TABLE+="</tr>"

          jq -r '.users[] | [.id, .name, .email, .age, .isActive, (.roles | join(", "))] | @tsv' "$JSON_PATH" | \
          while IFS=$'\t' read -r id name email age active roles; do
            TABLE+="<tr><td>$id</td><td>$name</td><td>$email</td><td>$age</td><td>$active</td><td>$roles</td></tr>"
          done

          TABLE+="</table>"

          echo "PAGE_CONTENT<<EOF" >> $GITHUB_ENV
          echo "$TABLE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Get current Confluence page info
        id: get_page
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content/$PAGE_ID?expand=body.storage,version")
          echo "$RESPONSE" > page.json

          # Extract current content and version
          OLD_CONTENT=$(jq -r '.body.storage.value' page.json)
          VERSION=$(jq '.version.number' page.json)

          echo "OLD_CONTENT=$OLD_CONTENT" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Prepare new content and payload
        id: prepare_payload
        run: |
          # You can replace or append. Here, let's replace content fully with table:
          NEW_CONTENT="$PAGE_CONTENT"

          # Build JSON payload for Confluence
          PAYLOAD=$(jq -n \
            --arg id "$PAGE_ID" \
            --arg title "$PAGE_TITLE" \
            --arg space_key "$SPACE_KEY" \
            --argjson version $((VERSION + 1)) \
            --arg value "$NEW_CONTENT" \
            '{
              id: $id,
              type: "page",
              title: $title,
              space: { key: $space_key },
              version: { number: $version },
              body: {
                storage: {
                  value: $value,
                  representation: "storage"
                }
              }
            }')

          echo "$PAYLOAD" > payload.json

      - name: Update Confluence page
        run: |
          curl -s -X PUT "$CONFLUENCE_URL/rest/api/content/$PAGE_ID" \
            -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json

