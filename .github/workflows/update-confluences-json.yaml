name: Update Confluence Page from JSON File

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update-confluence:
    runs-on: ubuntu-latest
    env:
      CONFLUENCE_URL: https://airnewn.atlassian.net/wiki
      PAGE_ID: "13369346"
      PAGE_TITLE: "Json"
      SPACE_KEY: "~7120201888c3feda8740dea868d9a13920847a"

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: new-pull-requests

      - name: Debug file presence
        run: |
          echo "Listing all files"
          find . -type f
          echo "Contents of pages directory:"
          ls -l pages

      - name: Convert JSON to HTML Table using Python
        run: |
          python3 <<EOF
          import json
          import html
          import os
          from glob import glob

          def clean(val):
              if val is None:
                  return ""
              if isinstance(val, str):
                  return html.escape(val).replace("\\n", "<br>")
              return html.escape(str(val))

          all_data = []

          for file_path in glob("pages/newFolders/*.json"):
              with open(file_path, encoding="utf-8") as f:
                  try:
                      data = json.load(f)
                      if isinstance(data, dict):
                          all_data.append(data)
                      elif isinstance(data, list):
                          all_data.extend(data)
                  except Exception as e:
                      print(f"Failed to read {file_path}: {e}")

          # Get all unique keys across all JSON objects
          keys = sorted({key for d in all_data for key in d.keys()})

          html_lines = ['<table border="1">']
          html_lines.append("<tr>" + "".join(f"<th>{html.escape(key)}</th>" for key in keys) + "</tr>")

          for row in all_data:
              html_lines.append("<tr>" + "".join(f"<td>{clean(row.get(key))}</td>" for key in keys) + "</tr>")

          html_lines.append("</table>")

          with open("table.html", "w", encoding="utf-8") as f:
              f.write('\n'.join(html_lines))
          EOF



      - name: Get current Confluence page info
        id: get_page
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content/$PAGE_ID?expand=body.storage,version")
          echo "$RESPONSE" > page.json

          OLD_CONTENT=$(jq -r '.body.storage.value' page.json)
          VERSION=$(jq '.version.number' page.json)

          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build payload with HTML table (Python)
        run: |
          python3 <<EOF
          import json
          import os

          page_id = os.environ["PAGE_ID"]
          page_title = os.environ["PAGE_TITLE"]
          space_key = os.environ["SPACE_KEY"]
          version = int(os.environ["VERSION"])

          with open("table.html", "r", encoding="utf-8") as f:
              html_content = f.read()

          payload = {
              "id": page_id,
              "type": "page",
              "title": page_title,
              "space": {"key": space_key},
              "version": {"number": version + 1},
              "body": {
                  "storage": {
                      "value": html_content,
                      "representation": "storage"
                  }
              }
          }

          with open("payload.json", "w", encoding="utf-8") as f:
              json.dump(payload, f, ensure_ascii=False, indent=2)
          EOF

      - name: Update Confluence page
        run: |
          curl -s -X PUT "$CONFLUENCE_URL/rest/api/content/$PAGE_ID" \
            -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json
