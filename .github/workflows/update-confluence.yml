name: Update Confluence Page with Commits

on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - '**'

jobs:
  update-confluence:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      CONFLUENCE_URL: https://airnewn.atlassian.net/wiki
      PAGE_ID: 98308
      SPACE_KEY: "~7120201888c3feda8740dea868d9a13920847a"
      PAGE_TITLE: "Changelog Updates"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch current Confluence content
        id: fetch
        run: |
          RESPONSE=$(curl -s -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content/$PAGE_ID?expand=body.storage,version")

          echo "$RESPONSE" > confluence.json

          OLD_TABLE=$(echo "$RESPONSE" | jq -r '.body.storage.value' | grep -oP '(?s)<table>.*?</table>' || echo "")
          VERSION=$(echo "$RESPONSE" | jq '.version.number')

          echo "old_table<<EOF" >> $GITHUB_ENV
          echo "$OLD_TABLE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "version=$((VERSION + 1))" >> $GITHUB_OUTPUT

      - name: Generate new commit rows
        id: commits
        run: |
          REPO_NAME="${{ github.repository }}"
          NEW_ROWS=$(git log -n 5 --pretty=format:"<tr><td>$REPO_NAME</td><td>%h</td><td>%s</td><td>%ad</td></tr>" --date=iso)

          echo "rows<<EOF" >> $GITHUB_ENV
          echo "$NEW_ROWS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Merge and update Confluence page
        run: |
          FULL_TABLE="<table><tr><th>Module Name</th><th>Commit ID</th><th>Commit Message</th><th>Commit Date & Time</th></tr>"
          FULL_TABLE+="$rows"

          if [[ "$old_table" =~ <table>(.*)</table> ]]; then
            EXISTING_ROWS=$(echo "$old_table" | sed -n '/<tr>/,$p' | sed '1d')
            FULL_TABLE+="$EXISTING_ROWS"
          fi

          FULL_TABLE+="</table>"

          JSON=$(jq -n \
            --arg id "$PAGE_ID" \
            --arg title "$PAGE_TITLE" \
            --arg space_key "$SPACE_KEY" \
            --arg version "${{ steps.fetch.outputs.version }}" \
            --arg value "$FULL_TABLE" \
            '{
              id: $id,
              type: "page",
              title: $title,
              space: { key: $space_key },
              version: { number: ($version | tonumber) },
              body: {
                storage: {
                  value: $value,
                  representation: "storage"
                }
              }
            }')

          echo "$JSON" > payload.json

          curl -s -X PUT "$CONFLUENCE_URL/rest/api/content/$PAGE_ID" \
            -u "${{ secrets.CONFLUENCE_USERNAME }}:${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json
