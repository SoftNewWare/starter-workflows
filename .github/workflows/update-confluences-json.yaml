name: Update Confluence Page withJsons

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  update-confluence:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      CONFLUENCE_URL: https://airnewn.atlassian.net/wiki
      SPACE_KEY: "ENG"
      PAGE_TITLE: "Json"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch PR base branch
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.event.pull_request.base.ref }}

      - name: Get Confluence Page ID
        id: get_page
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content?title=${PAGE_TITLE// /%20}&spaceKey=$SPACE_KEY")

          PAGE_ID=$(echo "$RESPONSE" | jq -r '.results[0].id')

          if [ "$PAGE_ID" = "null" ] || [ -z "$PAGE_ID" ]; then
            echo "Page not found. You must manually create the page first."
            exit 1
          fi

          echo "PAGE_ID=$PAGE_ID" >> $GITHUB_ENV

      - name: Generate commit table
        run: |
          echo "|| Serial || Module Name || Commit ID || Commit Message || Pull Request || Commit Author || Commit Date & Time ||" > table.txt
          SERIAL=1

          git log ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.merge_commit_sha }} \
            --pretty=format:"%h|%s|%an|%ad" --date=iso | while IFS='|' read -r COMMIT_ID MESSAGE AUTHOR DATE; do
            PR_LINK="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
            echo "| $SERIAL | ${{ github.repository }} | $COMMIT_ID | $MESSAGE | [$PR_LINK]($PR_LINK) | $AUTHOR | $DATE |" >> table.txt
            SERIAL=$((SERIAL + 1))
          done

      - name: Get current Confluence page content
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.CONFLUENCE_API_TOKEN }}" \
            "$CONFLUENCE_URL/rest/api/content/$PAGE_ID?expand=body.storage,version")

          echo "$RESPONSE" > confluence_response.json
          echo "VERSION=$(jq '.version.number' confluence_response.json)" >> $GITHUB_ENV
          jq -r '.body.storage.value' confluence_response.json > old_content.html

      - name: Update Confluence page
        run: |
          FINAL_CONTENT="$(cat old_content.html)<p><br/></p>$(awk '{printf "%s<br/>", $0}' table.txt)"

          JSON=$(jq -n \
            --arg id "$PAGE_ID" \
            --arg title "$PAGE_TITLE" \
            --arg space_key "$SPACE_KEY" \
            --arg version "$((VERSION + 1))" \
            --arg value "$FINAL_CONTENT" \
            '{
              id: $id,
              type: "page",
              title: $title,
              space: { key: $space_key },
              version: { number: ($version | tonumber) },
              body: {
                storage: {
                  value: $value,
                  representation: "storage"
                }
              }
            }')

          echo "$JSON" > payload.json

          curl -s -X PUT "$CONFLUENCE_URL/rest/api/content/$PAGE_ID" \
            -H "Authorization: Bearer ${{ secrets.CONFLUENCE_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d @payload.json
